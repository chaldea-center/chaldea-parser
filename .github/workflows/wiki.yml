name: Wiki Parser
on:
  #  push:
  #    branches:
  #      - main
  workflow_dispatch:
  schedule:
    - cron: "15 12 * * *"

jobs:
  wiki:
    runs-on: ubuntu-latest
    env:
      output_dir: "data/"
      cache_dir: "cache/"
      static_dir: "static/"
      mc_user: ${{ secrets.MC_USER }}
      mc_pwd: ${{ secrets.MC_PWD }}
      fandom_user: ${{ secrets.FANDOM_USER }}
      fandom_pwd: ${{ secrets.FANDOM_PWD }}

    steps:
      - name: Get Date
        id: get-date
        run: |
          /bin/date
          echo "::set-output name=date::$(/bin/date -u "+%Y%m%d%H%M")"
          curl -s https://ipinfo.io/ip
          echo https://github.com/chaldea-center/chaldea-data/commits/main
        shell: bash

      - name: Checkout chaldea-parser
        uses: actions/checkout@v2

      - name: Configure git author
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Cache Atlas and wiki api response
        uses: actions/cache@v2
        with:
          path: ${{ env.cache_dir }}
          key: api-cache-${{ runner.os }}-${{ steps.get-date.outputs.date }}
          restore-keys: |
            api-cache-${{ runner.os }}-
            api-cache-

      - name: Setup Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install dependencies
        run: |
          npm --location=global install js-beautify
          js-beautify -v
          pip uninstall --yes fgo-game-data-api
          pip install -r requirements.txt

      - name: Checkout data repo
        uses: actions/checkout@v2
        with:
          repository: chaldea-center/chaldea-data
          token: ${{ secrets.GH_PAGES_TOKEN }}
          path: ${{ env.output_dir }}

      - name: Checkout static repo
        uses: actions/checkout@v2
        with:
          repository: chaldea-center/static-resource
          token: ${{ secrets.GH_PAGES_TOKEN }}
          path: ${{ env.static_dir }}

      - name: Run wiki parser
        run: python main.py wiki

      - name: Commit wiki update
        working-directory: ${{ env.output_dir }}
        run: |
          git add .
          git commit -m "update wiki parser" || echo "Nothing to update"

      - name: Publish static
        working-directory: ${{ env.static_dir }}
        run: |
          git add .
          git commit -m "update static files" || echo "Nothing to update"
          git push

      - name: Run Atlas parser
        run: python main.py atlas

      - name: Publish data
        working-directory: ${{ env.output_dir }}
        run: |
          git add .
          if [ -e commit-msg.txt ]
          then
              git commit -F commit-msg.txt || echo "Nothing to update"
          else
              git commit -m "atlas parser: update data" || echo "Nothing to update"
          fi
          git push
